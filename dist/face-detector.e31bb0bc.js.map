{"version":3,"sources":["index.js"],"names":["video","document","querySelector","canvas","context","getContext","faceCanvas","faceContext","faceDetector","FaceDetector","inputs","querySelectorAll","options","SIZE","SCALE","handleOption","name","parseFloat","value","forEach","input","addEventListener","populateVideo","stream","navigator","mediaDevices","getUserMedia","width","height","srcObject","play","videoWidth","videoHeight","detectFace","faces","detect","console","log","length","drawFace","censor","requestAnimationFrame","face","top","left","boundingBox","clearRect","strokeStyle","lineWidth","strokeRect","imageSmoothingEnabled","drawImage","x","y","then"],"mappings":"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","file":"face-detector.e31bb0bc.js","sourceRoot":"..","sourcesContent":["const video = document.querySelector('.webcam');\r\nconst canvas = document.querySelector('.video');\r\nconst context = canvas.getContext('2d');\r\nconst faceCanvas = document.querySelector('.face');\r\nconst faceContext = faceCanvas.getContext('2d');\r\nconst faceDetector = new FaceDetector();\r\nconst inputs = document.querySelectorAll('.controls input[type=\"range\"]');\r\n\r\nconst options = {\r\n SIZE: 10,\r\n SCALE: 1.3 \r\n}\r\n\r\nfunction handleOption(){\r\n options[this.name] = parseFloat(this.value);\r\n}\r\n\r\ninputs.forEach(input => input.addEventListener('input', handleOption));\r\n\r\n\r\n// populate users video\r\nasync function populateVideo(){\r\n const stream = await navigator.mediaDevices.getUserMedia({\r\n  video: { width: 1300, height: 760 }\r\n });\r\n video.srcObject = stream;\r\n await video.play();\r\n // size the canvases to the be same size as video\r\n canvas.width = video.videoWidth;\r\n canvas.height = video.videoHeight;\r\n faceCanvas.width = video.videoWidth;\r\n faceCanvas.height = video.videoHeight;\r\n}\r\n\r\nasync function detectFace(){\r\n const faces = await faceDetector.detect(video);\r\n console.log(faces.length);\r\n\r\n // ask the browser when the next animation frame is\r\n // and tell it to run detectFace\r\n faces.forEach(drawFace);\r\n faces.forEach(censor);\r\n requestAnimationFrame(detectFace)\r\n}\r\n\r\nfunction drawFace(face){\r\n const { width, height, top, left } = face.boundingBox;\r\n context.clearRect(0, 0, canvas.width, canvas.height);\r\n context.strokeStyle = '#ffc662';\r\n context.lineWidth = 2;\r\n context.strokeRect(left, top, width, height);\r\n}\r\n\r\nfunction censor({ boundingBox: face}){\r\n  faceContext.imageSmoothingEnabled = false;\r\n  faceContext.clearRect(0, 0, faceCanvas.width, faceCanvas.height);\r\n  // draw the face\r\n  faceContext.drawImage(\r\n   // 5 source args\r\n   video,  // where does the source come from\r\n   face.x, // where do we start the source pull from\r\n   face.y,\r\n   face.width,\r\n   face.height,\r\n\r\n   // 4 draw args\r\n   face.x, // where we start drawing x & y\r\n   face.y,\r\n   options.SIZE,\r\n   options.SIZE\r\n  );\r\n\r\n  const width = face.width * options.SCALE;\r\n  const height = face.height * options.SCALE;\r\n  faceContext.drawImage(\r\n   // 5 source args\r\n   faceCanvas,  // source\r\n   face.x, // where do we start the source pull from\r\n   face.y,\r\n   options.SIZE,\r\n   options.SIZE,\r\n\r\n   // 4 draw args\r\n   face.x - (width - face.width) / 2, // where we start drawing x & y\r\n   face.y - (height - face.height) / 2,\r\n   width,\r\n   height\r\n  );\r\n}\r\n\r\npopulateVideo().then(detectFace)"]}